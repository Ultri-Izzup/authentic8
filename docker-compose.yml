version: '3.4'

services:
  postgresql:
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PG_PASS:?database password required}
      - POSTGRES_USER=${PG_USER:-authentik}
      - POSTGRES_DB=${PG_DB:-authentik}
    env_file:
      - .env
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
  server:
    image: authentic8
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    env_file:
      - .env
    ports:
      - "${AUTHENTIK_PORT_HTTP:-9000}:9000"
      - "${AUTHENTIK_PORT_HTTPS:-9443}:9443"
  worker:
    image: authentic8
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    env_file:
      - .env

  smtp4dev:
    image: rnwood/smtp4dev:v3
    build:
      target: development
    restart: always
    env_file: .env
    ports:
      # Change the number before : to the port the web interface should be accessible on
      - '5000:80'
      # Change the number before : to the port the SMTP and IMAP server should be accessible on
      - '25:25'
      - '143:143'
    volumes:
      # This is where smtp4dev stores the database..
        - smtp4dev-data:/smtp4dev
    environment:
      # Uncomment to customise these settings
      #Specifies the virtual path from web server root where SMTP4DEV web interface will be hosted. e.g. "/" or "/smtp4dev"
      #- ServerOptions__BasePath=/smtp4dev
      #Specifies the server hostname. Used in auto-generated TLS certificate if enabled.
      - ServerOptions__HostName=smtp4dev
      #Locks settings from being changed by user via web interface
      #- ServerOptions__LockSettings=true
      #Specifies the path where the database will be stored relative to APPDATA env var on Windows or XDG_CONFIG_HOME on non-Windows. Specify "" to use an in memory database.
      #- ServerOptions__Database=database.db
      #Specifies the number of messages to keep
      #- ServerOptions__NumberOfMessagesToKeep=100
      #Specifies the number of sessions to keep
      #- ServerOptions__NumberOfSessionsToKeep=100
      #Specifies the TLS mode to use. None=Off. StartTls=On demand if client supports STARTTLS. ImplicitTls=TLS as soon as connection is established.
      #- ServerOptions__TlsMode=None
      #Specifies the TLS certificate to use if TLS is enabled/requested. Specify "" to use an auto-generated self-signed certificate (then see console output on first startup)
      #- ServerOptions__TlsCertificate=
      #Sets the name of the SMTP server that will be used to relay messages or "" if messages should not be relayed
      #- RelayOptions__SmtpServer=
      #Sets the port number for the SMTP server used to relay messages.
      #- RelayOptions__SmtpPort=25
      #Specifies a comma separated list of recipient addresses for which messages will be relayed. An empty list means that no messages are relayed.
      #- RelayOptions__AllowedEmailsString=
      #Specifies the address used in MAIL FROM when relaying messages. (Sender address in message headers is left unmodified). The sender of each message is used if not specified.
      #- RelayOptions__SenderAddress=
      #The username for the SMTP server used to relay messages. If "" no apientication is attempted.
      #- RelayOptions__Login=
      #The password for the SMTP server used to relay messages
      #- RelayOptions__Password=
      #Specifies the port the IMAP server will listen on - allows standard email clients to view/retrieve messages
      #"ServerOptions__ImapPort"=143

volumes:
  database:
    driver: local
  redis:
    driver: local
  smtp4dev-data:
    driver: local
